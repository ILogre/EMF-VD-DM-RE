// automatically generated by Xtext
grammar requirementEngineering.DSL.RequirementEngineering with org.eclipse.xtext.common.Terminals

import "fr.uns.i3s.sparks.modalis.israfel.requirementengineeringlanguage" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Project returns Project:
	'Project:' name=EString 
	'Background:'
	background+=Background
	(background+=Background)*
	
	consistOf+=Feature
	(consistOf+=Feature)*;

Background returns Background:
	'Given dashboard' dashboard=EString 'with views'
		view+=View
		(view+=View)*;

View returns View:
	{View}
	name=EString ('to' desc=EString)?;

Feature returns Feature:
	'Feature:' name=EString ('in order to' desc=EString)?
	
	specifiedBy+=Scenario
	(specifiedBy+=Scenario)*;

Scenario returns Scenario:
	'Scenario:' name=EString
	('Given' system=Given)?
	'When' trigger+=When
	( "And" trigger+=When)*
	'Then' outcome+=Then
	( "And" outcome+=Then)*;

Given returns Given:
	'Given' dashboard=EString (' with available data' data+=Data ( "," data+=Data)* )? ;
	
Data returns Data:
	{Data}
	(quantifier=Quantifier)? ('type' type=DataType)? ('located in' locationType=ContainerType location=EString)?;

enum DataType returns DataType:
				Temperature = 'Temperature' | Luminosity = 'Luminosity' | Humidity = 'Humidity' | Cardiac_frequency = 'Cardiac_frequency' | Occupancy = 'Occupancy' | Pressure = 'Pressure';

enum ContainerType returns ContainerType:
				Building = 'Building' | Floor = 'Floor' | Corridor = 'Corridor' | Room = 'Room' | Furniture = 'Furniture' | Wall = 'Wall' | Window = 'Window';

enum Quantifier returns Quantifier:
				All = 'All' | Some = 'Some' | One = 'One';

When returns When:
	Loading | Interaction;

Loading returns Loading:
	context=[View|EString] 'is' new=State;

Interaction returns Interaction:
	action=Action (target=EString)? 'selected in' context=[View|EString];

Then returns Then:
	Update | Goal;

Update returns Update:
	target=[View|EString] 'is' do=Reaction;

Goal returns Goal:
	'it is possible to see ' function=Taxonomy ('on' data+=EString ( "," data+=EString)* )?;

EString returns ecore::EString:
	STRING | ID;

enum State returns State:
				Over = 'Over' | Current = 'Current' | Expected = 'Expected';

enum Action returns Action:
				next = 'next' | previous = 'previous' | range = 'range' | element = 'element';

enum Reaction returns Reaction:
				Synchronize = 'Synchronize' | GoTo = 'GoTo' | Enable = 'Enable' | Disable = 'Disable' ;

enum Taxonomy returns Taxonomy:
				Proportion = 'Proportion' | Location = 'Location' | Comparison = 'Comparison' | Part_to_a_whole = 'Part_to_a_whole' | Relationship = 'Relationship' | Over_time = 'Over_time' | Distribution = 'Distribution' | Hierarchy = 'Hierarchy' | Reference_tool = 'Reference_tool' | Range = 'Range' | Pattern = 'Pattern';
