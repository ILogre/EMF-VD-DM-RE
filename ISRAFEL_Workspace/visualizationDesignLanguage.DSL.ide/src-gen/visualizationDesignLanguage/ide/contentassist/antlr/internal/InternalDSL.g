/*
 * generated by Xtext 2.12.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package visualizationDesignLanguage.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package visualizationDesignLanguage.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import visualizationDesignLanguage.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDashboard
entryRuleDashboard
:
{ before(grammarAccess.getDashboardRule()); }
	 ruleDashboard
{ after(grammarAccess.getDashboardRule()); } 
	 EOF 
;

// Rule Dashboard
ruleDashboard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDashboardAccess().getGroup()); }
		(rule__Dashboard__Group__0)
		{ after(grammarAccess.getDashboardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVisualization
entryRuleVisualization
:
{ before(grammarAccess.getVisualizationRule()); }
	 ruleVisualization
{ after(grammarAccess.getVisualizationRule()); } 
	 EOF 
;

// Rule Visualization
ruleVisualization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVisualizationAccess().getGroup()); }
		(rule__Visualization__Group__0)
		{ after(grammarAccess.getVisualizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhatQualifier
entryRuleWhatQualifier
:
{ before(grammarAccess.getWhatQualifierRule()); }
	 ruleWhatQualifier
{ after(grammarAccess.getWhatQualifierRule()); } 
	 EOF 
;

// Rule WhatQualifier
ruleWhatQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhatQualifierAccess().getConcernAssignment()); }
		(rule__WhatQualifier__ConcernAssignment)
		{ after(grammarAccess.getWhatQualifierAccess().getConcernAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHowQualifier
entryRuleHowQualifier
:
{ before(grammarAccess.getHowQualifierRule()); }
	 ruleHowQualifier
{ after(grammarAccess.getHowQualifierRule()); } 
	 EOF 
;

// Rule HowQualifier
ruleHowQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHowQualifierAccess().getAlternatives()); }
		(rule__HowQualifier__Alternatives)
		{ after(grammarAccess.getHowQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWindow
entryRuleWindow
:
{ before(grammarAccess.getWindowRule()); }
	 ruleWindow
{ after(grammarAccess.getWindowRule()); } 
	 EOF 
;

// Rule Window
ruleWindow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWindowAccess().getGroup()); }
		(rule__Window__Group__0)
		{ after(grammarAccess.getWindowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getGroup()); }
		(rule__Container__Group__0)
		{ after(grammarAccess.getContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCell
entryRuleCell
:
{ before(grammarAccess.getCellRule()); }
	 ruleCell
{ after(grammarAccess.getCellRule()); } 
	 EOF 
;

// Rule Cell
ruleCell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellAccess().getWrapsAssignment()); }
		(rule__Cell__WrapsAssignment)
		{ after(grammarAccess.getCellAccess().getWrapsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIcon
entryRuleIcon
:
{ before(grammarAccess.getIconRule()); }
	 ruleIcon
{ after(grammarAccess.getIconRule()); } 
	 EOF 
;

// Rule Icon
ruleIcon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIconAccess().getGroup()); }
		(rule__Icon__Group__0)
		{ after(grammarAccess.getIconAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorization
entryRuleColorization
:
{ before(grammarAccess.getColorizationRule()); }
	 ruleColorization
{ after(grammarAccess.getColorizationRule()); } 
	 EOF 
;

// Rule Colorization
ruleColorization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorizationAccess().getGroup()); }
		(rule__Colorization__Group__0)
		{ after(grammarAccess.getColorizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getValueAssignment()); }
		(rule__Property__ValueAssignment)
		{ after(grammarAccess.getPropertyAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThreshold
entryRuleThreshold
:
{ before(grammarAccess.getThresholdRule()); }
	 ruleThreshold
{ after(grammarAccess.getThresholdRule()); } 
	 EOF 
;

// Rule Threshold
ruleThreshold 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThresholdAccess().getGroup()); }
		(rule__Threshold__Group__0)
		{ after(grammarAccess.getThresholdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataProperty
ruleDataProperty
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPropertyAccess().getAlternatives()); }
		(rule__DataProperty__Alternatives)
		{ after(grammarAccess.getDataPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Taxonomy
ruleTaxonomy
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaxonomyAccess().getAlternatives()); }
		(rule__Taxonomy__Alternatives)
		{ after(grammarAccess.getTaxonomyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HowQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHowQualifierAccess().getIconParserRuleCall_0()); }
		ruleIcon
		{ after(grammarAccess.getHowQualifierAccess().getIconParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getHowQualifierAccess().getColorizationParserRuleCall_1()); }
		ruleColorization
		{ after(grammarAccess.getHowQualifierAccess().getColorizationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getHowQualifierAccess().getPropertyParserRuleCall_2()); }
		ruleProperty
		{ after(grammarAccess.getHowQualifierAccess().getPropertyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getHowQualifierAccess().getThresholdParserRuleCall_3()); }
		ruleThreshold
		{ after(grammarAccess.getHowQualifierAccess().getThresholdParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getGroup_0_0()); }
		(rule__Container__Group_0_0__0)
		{ after(grammarAccess.getContainerAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerAccess().getGroup_0_1()); }
		(rule__Container__Group_0_1__0)
		{ after(grammarAccess.getContainerAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPropertyAccess().getContinuousEnumLiteralDeclaration_0()); }
		('Continuous')
		{ after(grammarAccess.getDataPropertyAccess().getContinuousEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataPropertyAccess().getDiscreteEnumLiteralDeclaration_1()); }
		('Discrete')
		{ after(grammarAccess.getDataPropertyAccess().getDiscreteEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataPropertyAccess().getScalarEnumLiteralDeclaration_2()); }
		('Scalar')
		{ after(grammarAccess.getDataPropertyAccess().getScalarEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataPropertyAccess().getStructuralEnumLiteralDeclaration_3()); }
		('Structural')
		{ after(grammarAccess.getDataPropertyAccess().getStructuralEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Taxonomy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaxonomyAccess().getProportionEnumLiteralDeclaration_0()); }
		('Proportion')
		{ after(grammarAccess.getTaxonomyAccess().getProportionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getLocationEnumLiteralDeclaration_1()); }
		('Location')
		{ after(grammarAccess.getTaxonomyAccess().getLocationEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getComparisonEnumLiteralDeclaration_2()); }
		('Comparison')
		{ after(grammarAccess.getTaxonomyAccess().getComparisonEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getPart_to_a_wholeEnumLiteralDeclaration_3()); }
		('Part_to_a_whole')
		{ after(grammarAccess.getTaxonomyAccess().getPart_to_a_wholeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getRelationshipEnumLiteralDeclaration_4()); }
		('Relationship')
		{ after(grammarAccess.getTaxonomyAccess().getRelationshipEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getOver_timeEnumLiteralDeclaration_5()); }
		('Over_time')
		{ after(grammarAccess.getTaxonomyAccess().getOver_timeEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getDistributionEnumLiteralDeclaration_6()); }
		('Distribution')
		{ after(grammarAccess.getTaxonomyAccess().getDistributionEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getHierarchyEnumLiteralDeclaration_7()); }
		('Hierarchy')
		{ after(grammarAccess.getTaxonomyAccess().getHierarchyEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getReference_toolEnumLiteralDeclaration_8()); }
		('Reference_tool')
		{ after(grammarAccess.getTaxonomyAccess().getReference_toolEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getRangeEnumLiteralDeclaration_9()); }
		('Range')
		{ after(grammarAccess.getTaxonomyAccess().getRangeEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getPatternEnumLiteralDeclaration_10()); }
		('Pattern')
		{ after(grammarAccess.getTaxonomyAccess().getPatternEnumLiteralDeclaration_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__0__Impl
	rule__Dashboard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getDashboardKeyword_0()); }
	'Dashboard'
	{ after(grammarAccess.getDashboardAccess().getDashboardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__1__Impl
	rule__Dashboard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getNameAssignment_1()); }
	(rule__Dashboard__NameAssignment_1)
	{ after(grammarAccess.getDashboardAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__2__Impl
	rule__Dashboard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDashboardAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__3__Impl
	rule__Dashboard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getVisualizationsKeyword_3()); }
	'Visualizations :'
	{ after(grammarAccess.getDashboardAccess().getVisualizationsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__4__Impl
	rule__Dashboard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getVisualizationsAssignment_4()); }
	(rule__Dashboard__VisualizationsAssignment_4)
	{ after(grammarAccess.getDashboardAccess().getVisualizationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__5__Impl
	rule__Dashboard__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getVisualizationsAssignment_5()); }
	(rule__Dashboard__VisualizationsAssignment_5)*
	{ after(grammarAccess.getDashboardAccess().getVisualizationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__6__Impl
	rule__Dashboard__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getPositioningKeyword_6()); }
	'Positioning :'
	{ after(grammarAccess.getDashboardAccess().getPositioningKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__7__Impl
	rule__Dashboard__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getWindowsAssignment_7()); }
	(rule__Dashboard__WindowsAssignment_7)
	{ after(grammarAccess.getDashboardAccess().getWindowsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dashboard__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDashboardAccess().getWindowsAssignment_8()); }
	(rule__Dashboard__WindowsAssignment_8)*
	{ after(grammarAccess.getDashboardAccess().getWindowsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visualization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__0__Impl
	rule__Visualization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getNameAssignment_0()); }
	(rule__Visualization__NameAssignment_0)
	{ after(grammarAccess.getVisualizationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__1__Impl
	rule__Visualization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getGroup_1()); }
	(rule__Visualization__Group_1__0)?
	{ after(grammarAccess.getVisualizationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__2__Impl
	rule__Visualization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getVisualizationAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__3__Impl
	rule__Visualization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getDisplaysAssignment_3()); }
	(rule__Visualization__DisplaysAssignment_3)
	{ after(grammarAccess.getVisualizationAccess().getDisplaysAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__4__Impl
	rule__Visualization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getGroup_4()); }
	(rule__Visualization__Group_4__0)*
	{ after(grammarAccess.getVisualizationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getSemicolonKeyword_5()); }
	(';')?
	{ after(grammarAccess.getVisualizationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visualization__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_1__0__Impl
	rule__Visualization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getShowsKeyword_1_0()); }
	'shows'
	{ after(grammarAccess.getVisualizationAccess().getShowsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_1__1__Impl
	rule__Visualization__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getConcernsAssignment_1_1()); }
	(rule__Visualization__ConcernsAssignment_1_1)
	{ after(grammarAccess.getVisualizationAccess().getConcernsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getGroup_1_2()); }
	(rule__Visualization__Group_1_2__0)*
	{ after(grammarAccess.getVisualizationAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visualization__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_1_2__0__Impl
	rule__Visualization__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getVisualizationAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getConcernsAssignment_1_2_1()); }
	(rule__Visualization__ConcernsAssignment_1_2_1)
	{ after(grammarAccess.getVisualizationAccess().getConcernsAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Visualization__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_4__0__Impl
	rule__Visualization__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getSemicolonKeyword_4_0()); }
	';'
	{ after(grammarAccess.getVisualizationAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Visualization__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVisualizationAccess().getDisplaysAssignment_4_1()); }
	(rule__Visualization__DisplaysAssignment_4_1)
	{ after(grammarAccess.getVisualizationAccess().getDisplaysAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_0()); }
	(rule__Source__NameAssignment_0)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_1()); }
	(rule__Source__Group_1__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__2__Impl
	rule__Source__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_2()); }
	(rule__Source__Group_2__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__3__Impl
	rule__Source__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getDisplayedAsKeyword_3()); }
	'displayed as'
	{ after(grammarAccess.getSourceAccess().getDisplayedAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_4()); }
	(rule__Source__Group_4__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__0__Impl
	rule__Source__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getOfTypeKeyword_1_0()); }
	'of type'
	{ after(grammarAccess.getSourceAccess().getOfTypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getTypeAssignment_1_1()); }
	(rule__Source__TypeAssignment_1_1)
	{ after(grammarAccess.getSourceAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_2__0__Impl
	rule__Source__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getLocateAtKeyword_2_0()); }
	'locate at'
	{ after(grammarAccess.getSourceAccess().getLocateAtKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getLocationAssignment_2_1()); }
	(rule__Source__LocationAssignment_2_1)
	{ after(grammarAccess.getSourceAccess().getLocationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_4__0__Impl
	rule__Source__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getConcernsAssignment_4_0()); }
	(rule__Source__ConcernsAssignment_4_0)
	{ after(grammarAccess.getSourceAccess().getConcernsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_4_1()); }
	(rule__Source__Group_4_1__0)*
	{ after(grammarAccess.getSourceAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_4_1__0__Impl
	rule__Source__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getSourceAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getConcernsAssignment_4_1_1()); }
	(rule__Source__ConcernsAssignment_4_1_1)
	{ after(grammarAccess.getSourceAccess().getConcernsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__0__Impl
	rule__Window__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getViewKeyword_0()); }
	'view'
	{ after(grammarAccess.getWindowAccess().getViewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__1__Impl
	rule__Window__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getNameAssignment_1()); }
	(rule__Window__NameAssignment_1)
	{ after(grammarAccess.getWindowAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__2__Impl
	rule__Window__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getWindowAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__3__Impl
	rule__Window__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getOrganizesAssignment_3()); }
	(rule__Window__OrganizesAssignment_3)
	{ after(grammarAccess.getWindowAccess().getOrganizesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getGroup_4()); }
	(rule__Window__Group_4__0)*
	{ after(grammarAccess.getWindowAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Window__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_4__0__Impl
	rule__Window__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getSpaceSpaceSpaceVerticalLineSpaceSpaceSpaceKeyword_4_0()); }
	'   |   '
	{ after(grammarAccess.getWindowAccess().getSpaceSpaceSpaceVerticalLineSpaceSpaceSpaceKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Window__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWindowAccess().getOrganizesAssignment_4_1()); }
	(rule__Window__OrganizesAssignment_4_1)
	{ after(grammarAccess.getWindowAccess().getOrganizesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getAlternatives_0()); }
	(rule__Container__Alternatives_0)
	{ after(grammarAccess.getContainerAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGroup_1()); }
	(rule__Container__Group_1__0)?
	{ after(grammarAccess.getContainerAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__2__Impl
	rule__Container__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getColonSpaceLeftSquareBracketKeyword_2()); }
	': ['
	{ after(grammarAccess.getContainerAccess().getColonSpaceLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__3__Impl
	rule__Container__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainsAssignment_3()); }
	(rule__Container__ContainsAssignment_3)
	{ after(grammarAccess.getContainerAccess().getContainsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__4__Impl
	rule__Container__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGroup_4()); }
	(rule__Container__Group_4__0)*
	{ after(grammarAccess.getContainerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getContainerAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_0_0__0__Impl
	rule__Container__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getColumnKeyword_0_0_0()); }
	'Column'
	{ after(grammarAccess.getContainerAccess().getColumnKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getColumnAction_0_0_1()); }
	()
	{ after(grammarAccess.getContainerAccess().getColumnAction_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_0_1__0__Impl
	rule__Container__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getLineKeyword_0_1_0()); }
	'Line'
	{ after(grammarAccess.getContainerAccess().getLineKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getLineAction_0_1_1()); }
	()
	{ after(grammarAccess.getContainerAccess().getLineAction_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_1__0__Impl
	rule__Container__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getSizedKeyword_1_0()); }
	'sized'
	{ after(grammarAccess.getContainerAccess().getSizedKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getPonderationAssignment_1_1()); }
	(rule__Container__PonderationAssignment_1_1)
	{ after(grammarAccess.getContainerAccess().getPonderationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_4__0__Impl
	rule__Container__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getSemicolonKeyword_4_0()); }
	';'
	{ after(grammarAccess.getContainerAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainsAssignment_4_1()); }
	(rule__Container__ContainsAssignment_4_1)
	{ after(grammarAccess.getContainerAccess().getContainsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Icon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Icon__Group__0__Impl
	rule__Icon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Icon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIconAccess().getIconAction_0()); }
	()
	{ after(grammarAccess.getIconAccess().getIconAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Icon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Icon__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Icon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIconAccess().getIconKeyword_1()); }
	'Icon'
	{ after(grammarAccess.getIconAccess().getIconKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Colorization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colorization__Group__0__Impl
	rule__Colorization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorizationAccess().getColorizationAction_0()); }
	()
	{ after(grammarAccess.getColorizationAccess().getColorizationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colorization__Group__1__Impl
	rule__Colorization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorizationAccess().getColorKeyword_1()); }
	'Color'
	{ after(grammarAccess.getColorizationAccess().getColorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colorization__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorizationAccess().getColorAssignment_2()); }
	(rule__Colorization__ColorAssignment_2)
	{ after(grammarAccess.getColorizationAccess().getColorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Threshold__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group__0__Impl
	rule__Threshold__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getThresholdAction_0()); }
	()
	{ after(grammarAccess.getThresholdAccess().getThresholdAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group__1__Impl
	rule__Threshold__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getThresholdKeyword_1()); }
	'Threshold ('
	{ after(grammarAccess.getThresholdAccess().getThresholdKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group__2__Impl
	rule__Threshold__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getGroup_2()); }
	(rule__Threshold__Group_2__0)?
	{ after(grammarAccess.getThresholdAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group__3__Impl
	rule__Threshold__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getGroup_3()); }
	(rule__Threshold__Group_3__0)?
	{ after(grammarAccess.getThresholdAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getThresholdAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Threshold__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group_2__0__Impl
	rule__Threshold__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getMinKeyword_2_0()); }
	'min'
	{ after(grammarAccess.getThresholdAccess().getMinKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getMinAssignment_2_1()); }
	(rule__Threshold__MinAssignment_2_1)
	{ after(grammarAccess.getThresholdAccess().getMinAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Threshold__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group_3__0__Impl
	rule__Threshold__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getMaxKeyword_3_0()); }
	'max'
	{ after(grammarAccess.getThresholdAccess().getMaxKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Threshold__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThresholdAccess().getMaxAssignment_3_1()); }
	(rule__Threshold__MaxAssignment_3_1)
	{ after(grammarAccess.getThresholdAccess().getMaxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dashboard__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDashboardAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDashboardAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__VisualizationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDashboardAccess().getVisualizationsVisualizationParserRuleCall_4_0()); }
		ruleVisualization
		{ after(grammarAccess.getDashboardAccess().getVisualizationsVisualizationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__VisualizationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDashboardAccess().getVisualizationsVisualizationParserRuleCall_5_0()); }
		ruleVisualization
		{ after(grammarAccess.getDashboardAccess().getVisualizationsVisualizationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__WindowsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDashboardAccess().getWindowsWindowParserRuleCall_7_0()); }
		ruleWindow
		{ after(grammarAccess.getDashboardAccess().getWindowsWindowParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dashboard__WindowsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDashboardAccess().getWindowsWindowParserRuleCall_8_0()); }
		ruleWindow
		{ after(grammarAccess.getDashboardAccess().getWindowsWindowParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualizationAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getVisualizationAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__ConcernsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualizationAccess().getConcernsWhatQualifierParserRuleCall_1_1_0()); }
		ruleWhatQualifier
		{ after(grammarAccess.getVisualizationAccess().getConcernsWhatQualifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__ConcernsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualizationAccess().getConcernsWhatQualifierParserRuleCall_1_2_1_0()); }
		ruleWhatQualifier
		{ after(grammarAccess.getVisualizationAccess().getConcernsWhatQualifierParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__DisplaysAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualizationAccess().getDisplaysSourceParserRuleCall_3_0()); }
		ruleSource
		{ after(grammarAccess.getVisualizationAccess().getDisplaysSourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Visualization__DisplaysAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVisualizationAccess().getDisplaysSourceParserRuleCall_4_1_0()); }
		ruleSource
		{ after(grammarAccess.getVisualizationAccess().getDisplaysSourceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhatQualifier__ConcernAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhatQualifierAccess().getConcernTaxonomyEnumRuleCall_0()); }
		ruleTaxonomy
		{ after(grammarAccess.getWhatQualifierAccess().getConcernTaxonomyEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getSourceAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getTypeEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getSourceAccess().getTypeEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__LocationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getLocationEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getSourceAccess().getLocationEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__ConcernsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getConcernsHowQualifierParserRuleCall_4_0_0()); }
		ruleHowQualifier
		{ after(grammarAccess.getSourceAccess().getConcernsHowQualifierParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__ConcernsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getConcernsHowQualifierParserRuleCall_4_1_1_0()); }
		ruleHowQualifier
		{ after(grammarAccess.getSourceAccess().getConcernsHowQualifierParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getWindowAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__OrganizesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getOrganizesContainerParserRuleCall_3_0()); }
		ruleContainer
		{ after(grammarAccess.getWindowAccess().getOrganizesContainerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Window__OrganizesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWindowAccess().getOrganizesContainerParserRuleCall_4_1_0()); }
		ruleContainer
		{ after(grammarAccess.getWindowAccess().getOrganizesContainerParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__PonderationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getPonderationEIntParserRuleCall_1_1_0()); }
		ruleEInt
		{ after(grammarAccess.getContainerAccess().getPonderationEIntParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ContainsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getContainsCellParserRuleCall_3_0()); }
		ruleCell
		{ after(grammarAccess.getContainerAccess().getContainsCellParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ContainsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getContainsCellParserRuleCall_4_1_0()); }
		ruleCell
		{ after(grammarAccess.getContainerAccess().getContainsCellParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__WrapsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellAccess().getWrapsVisualizationCrossReference_0()); }
		(
			{ before(grammarAccess.getCellAccess().getWrapsVisualizationIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCellAccess().getWrapsVisualizationIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getCellAccess().getWrapsVisualizationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colorization__ColorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorizationAccess().getColorEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getColorizationAccess().getColorEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getValueDataPropertyEnumRuleCall_0()); }
		ruleDataProperty
		{ after(grammarAccess.getPropertyAccess().getValueDataPropertyEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__MinAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThresholdAccess().getMinEIntParserRuleCall_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getThresholdAccess().getMinEIntParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Threshold__MaxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThresholdAccess().getMaxEIntParserRuleCall_3_1_0()); }
		ruleEInt
		{ after(grammarAccess.getThresholdAccess().getMaxEIntParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
