// automatically generated by Xtext
grammar visualizationDesignLanguage.DSL.VD with org.eclipse.xtext.common.Terminals

import "fr.uns.i3s.sparks.modalis.israfel.visualisationdesignlanguage" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Dashboard returns Dashboard:
	'Dashboard'	name=EString ':'

		'Visualizations :'
			visualizations+=Visualization
			(visualizations+=Visualization)*
		
		'Positioning :'
			windows+=Window
			(windows+=Window)* 
	;
	
Visualization returns Visualization:
	name=EString ('shows' concerns+=WhatQualifier ( "," concerns+=WhatQualifier)* )?
	'of' displays+=Source ( ";" displays+=Source)* (';')?;
	
WhatQualifier returns WhatQualifier:
	concern=Taxonomy;

Source returns Source:
	name=EString 'displayed as' (concerns+=HowQualifier ( "," concerns+=HowQualifier)* )?;

HowQualifier returns HowQualifier:
	(Icon | Colorization | Property | Threshold);
	
Window returns Window:
	'view' name=EString ':'
	organizes+=Container ( "   |   " organizes+=Container)*;

Container returns Container:
	('Column' {Column} | 'Line' {Line}) ('sized' ponderation=EInt)? ': [' contains+=Cell ( ";" contains+=Cell)* ']';

Cell returns Cell:
	wraps=[Visualization];

Icon returns Icon:
	{Icon}
	'Icon';

Colorization returns Colorization:
	{Colorization}
	'Color' color=EString;

Property returns Property:
	value=DataProperty;

Threshold returns Threshold:
	{Threshold}
	'Threshold (' ('min' min=EInt)?	('max' max=EInt)? ')';

enum DataProperty returns DataProperty:
				Continuous = 'Continuous' | Discrete = 'Discrete' | Scalar = 'Scalar' | Structural = 'Structural';

enum Taxonomy returns Taxonomy:
				Proportion = 'Proportion' | Location = 'Location' | Comparison = 'Comparison' | Part_to_a_whole = 'Part_to_a_whole' | Relationship = 'Relationship' | Over_time = 'Over_time' | Distribution = 'Distribution' | Hierarchy = 'Hierarchy' | Reference_tool = 'Reference_tool' | Range = 'Range' | Pattern = 'Pattern';
				
EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;