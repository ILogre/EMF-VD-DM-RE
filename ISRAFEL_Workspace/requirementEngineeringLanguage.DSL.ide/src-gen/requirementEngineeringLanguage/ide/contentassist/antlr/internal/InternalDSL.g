/*
 * generated by Xtext 2.12.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package requirementEngineeringLanguage.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package requirementEngineeringLanguage.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import requirementEngineeringLanguage.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackground
entryRuleBackground
:
{ before(grammarAccess.getBackgroundRule()); }
	 ruleBackground
{ after(grammarAccess.getBackgroundRule()); } 
	 EOF 
;

// Rule Background
ruleBackground 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackgroundAccess().getGroup()); }
		(rule__Background__Group__0)
		{ after(grammarAccess.getBackgroundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleView
entryRuleView
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getViewAccess().getGroup()); }
		(rule__View__Group__0)
		{ after(grammarAccess.getViewAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven
entryRuleGiven
:
{ before(grammarAccess.getGivenRule()); }
	 ruleGiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule Given
ruleGiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhen
entryRuleWhen
:
{ before(grammarAccess.getWhenRule()); }
	 ruleWhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule When
ruleWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenAccess().getAlternatives()); }
		(rule__When__Alternatives)
		{ after(grammarAccess.getWhenAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoading
entryRuleLoading
:
{ before(grammarAccess.getLoadingRule()); }
	 ruleLoading
{ after(grammarAccess.getLoadingRule()); } 
	 EOF 
;

// Rule Loading
ruleLoading 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadingAccess().getGroup()); }
		(rule__Loading__Group__0)
		{ after(grammarAccess.getLoadingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteraction
entryRuleInteraction
:
{ before(grammarAccess.getInteractionRule()); }
	 ruleInteraction
{ after(grammarAccess.getInteractionRule()); } 
	 EOF 
;

// Rule Interaction
ruleInteraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteractionAccess().getGroup()); }
		(rule__Interaction__Group__0)
		{ after(grammarAccess.getInteractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getAlternatives()); }
		(rule__Then__Alternatives)
		{ after(grammarAccess.getThenAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoal
entryRuleGoal
:
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoalAccess().getGroup()); }
		(rule__Goal__Group__0)
		{ after(grammarAccess.getGoalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ContainerType
ruleContainerType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerTypeAccess().getAlternatives()); }
		(rule__ContainerType__Alternatives)
		{ after(grammarAccess.getContainerTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Quantifier
ruleQuantifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
		(rule__Quantifier__Alternatives)
		{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule State
ruleState
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getAlternatives()); }
		(rule__State__Alternatives)
		{ after(grammarAccess.getStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Action
ruleAction
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Reaction
ruleReaction
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getAlternatives()); }
		(rule__Reaction__Alternatives)
		{ after(grammarAccess.getReactionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Taxonomy
ruleTaxonomy
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaxonomyAccess().getAlternatives()); }
		(rule__Taxonomy__Alternatives)
		{ after(grammarAccess.getTaxonomyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getLoadingParserRuleCall_0()); }
		ruleLoading
		{ after(grammarAccess.getWhenAccess().getLoadingParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getWhenAccess().getInteractionParserRuleCall_1()); }
		ruleInteraction
		{ after(grammarAccess.getWhenAccess().getInteractionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getUpdateParserRuleCall_0()); }
		ruleUpdate
		{ after(grammarAccess.getThenAccess().getUpdateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getGoalParserRuleCall_1()); }
		ruleGoal
		{ after(grammarAccess.getThenAccess().getGoalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getTemperatureEnumLiteralDeclaration_0()); }
		('Temperature')
		{ after(grammarAccess.getDataTypeAccess().getTemperatureEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getLuminosityEnumLiteralDeclaration_1()); }
		('Luminosity')
		{ after(grammarAccess.getDataTypeAccess().getLuminosityEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getHumidityEnumLiteralDeclaration_2()); }
		('Humidity')
		{ after(grammarAccess.getDataTypeAccess().getHumidityEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getCardiac_frequencyEnumLiteralDeclaration_3()); }
		('Cardiac_frequency')
		{ after(grammarAccess.getDataTypeAccess().getCardiac_frequencyEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getOccupancyEnumLiteralDeclaration_4()); }
		('Occupancy')
		{ after(grammarAccess.getDataTypeAccess().getOccupancyEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getPressureEnumLiteralDeclaration_5()); }
		('Pressure')
		{ after(grammarAccess.getDataTypeAccess().getPressureEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerTypeAccess().getBuildingEnumLiteralDeclaration_0()); }
		('Building')
		{ after(grammarAccess.getContainerTypeAccess().getBuildingEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getFloorEnumLiteralDeclaration_1()); }
		('Floor')
		{ after(grammarAccess.getContainerTypeAccess().getFloorEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getCorridorEnumLiteralDeclaration_2()); }
		('Corridor')
		{ after(grammarAccess.getContainerTypeAccess().getCorridorEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getRoomEnumLiteralDeclaration_3()); }
		('Room')
		{ after(grammarAccess.getContainerTypeAccess().getRoomEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getFurnitureEnumLiteralDeclaration_4()); }
		('Furniture')
		{ after(grammarAccess.getContainerTypeAccess().getFurnitureEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getWallEnumLiteralDeclaration_5()); }
		('Wall')
		{ after(grammarAccess.getContainerTypeAccess().getWallEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getWindowEnumLiteralDeclaration_6()); }
		('Window')
		{ after(grammarAccess.getContainerTypeAccess().getWindowEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_0()); }
		('All')
		{ after(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getSomeEnumLiteralDeclaration_1()); }
		('Some')
		{ after(grammarAccess.getQuantifierAccess().getSomeEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_2()); }
		('One')
		{ after(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getOverEnumLiteralDeclaration_0()); }
		('Over')
		{ after(grammarAccess.getStateAccess().getOverEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getCurrentEnumLiteralDeclaration_1()); }
		('Current')
		{ after(grammarAccess.getStateAccess().getCurrentEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getStateAccess().getExpectedEnumLiteralDeclaration_2()); }
		('Expected')
		{ after(grammarAccess.getStateAccess().getExpectedEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNextEnumLiteralDeclaration_0()); }
		('next')
		{ after(grammarAccess.getActionAccess().getNextEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getPreviousEnumLiteralDeclaration_1()); }
		('previous')
		{ after(grammarAccess.getActionAccess().getPreviousEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getRangeEnumLiteralDeclaration_2()); }
		('range')
		{ after(grammarAccess.getActionAccess().getRangeEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getElementEnumLiteralDeclaration_3()); }
		('element')
		{ after(grammarAccess.getActionAccess().getElementEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getSynchronizeEnumLiteralDeclaration_0()); }
		('Synchronize')
		{ after(grammarAccess.getReactionAccess().getSynchronizeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getReactionAccess().getGoToEnumLiteralDeclaration_1()); }
		('GoTo')
		{ after(grammarAccess.getReactionAccess().getGoToEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getReactionAccess().getEnableEnumLiteralDeclaration_2()); }
		('Enable')
		{ after(grammarAccess.getReactionAccess().getEnableEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getReactionAccess().getDisableEnumLiteralDeclaration_3()); }
		('Disable')
		{ after(grammarAccess.getReactionAccess().getDisableEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Taxonomy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaxonomyAccess().getProportionEnumLiteralDeclaration_0()); }
		('Proportion')
		{ after(grammarAccess.getTaxonomyAccess().getProportionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getLocationEnumLiteralDeclaration_1()); }
		('Location')
		{ after(grammarAccess.getTaxonomyAccess().getLocationEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getComparisonEnumLiteralDeclaration_2()); }
		('Comparison')
		{ after(grammarAccess.getTaxonomyAccess().getComparisonEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getPart_to_a_wholeEnumLiteralDeclaration_3()); }
		('Part_to_a_whole')
		{ after(grammarAccess.getTaxonomyAccess().getPart_to_a_wholeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getRelationshipEnumLiteralDeclaration_4()); }
		('Relationship')
		{ after(grammarAccess.getTaxonomyAccess().getRelationshipEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getOver_timeEnumLiteralDeclaration_5()); }
		('Over_time')
		{ after(grammarAccess.getTaxonomyAccess().getOver_timeEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getDistributionEnumLiteralDeclaration_6()); }
		('Distribution')
		{ after(grammarAccess.getTaxonomyAccess().getDistributionEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getHierarchyEnumLiteralDeclaration_7()); }
		('Hierarchy')
		{ after(grammarAccess.getTaxonomyAccess().getHierarchyEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getReference_toolEnumLiteralDeclaration_8()); }
		('Reference_tool')
		{ after(grammarAccess.getTaxonomyAccess().getReference_toolEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getRangeEnumLiteralDeclaration_9()); }
		('Range')
		{ after(grammarAccess.getTaxonomyAccess().getRangeEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getTaxonomyAccess().getPatternEnumLiteralDeclaration_10()); }
		('Pattern')
		{ after(grammarAccess.getTaxonomyAccess().getPatternEnumLiteralDeclaration_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'Project:'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getBackgroundKeyword_2()); }
	'Background:'
	{ after(grammarAccess.getProjectAccess().getBackgroundKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getBackgroundAssignment_3()); }
	(rule__Project__BackgroundAssignment_3)
	{ after(grammarAccess.getProjectAccess().getBackgroundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getBackgroundAssignment_4()); }
	(rule__Project__BackgroundAssignment_4)*
	{ after(grammarAccess.getProjectAccess().getBackgroundAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
	rule__Project__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getConsistOfAssignment_5()); }
	(rule__Project__ConsistOfAssignment_5)
	{ after(grammarAccess.getProjectAccess().getConsistOfAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getConsistOfAssignment_6()); }
	(rule__Project__ConsistOfAssignment_6)*
	{ after(grammarAccess.getProjectAccess().getConsistOfAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Background__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__0__Impl
	rule__Background__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getGivenDashboardKeyword_0()); }
	'Given dashboard'
	{ after(grammarAccess.getBackgroundAccess().getGivenDashboardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__1__Impl
	rule__Background__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getDashboardAssignment_1()); }
	(rule__Background__DashboardAssignment_1)
	{ after(grammarAccess.getBackgroundAccess().getDashboardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__2__Impl
	rule__Background__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getWithViewsKeyword_2()); }
	'with views'
	{ after(grammarAccess.getBackgroundAccess().getWithViewsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__3__Impl
	rule__Background__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getViewAssignment_3()); }
	(rule__Background__ViewAssignment_3)
	{ after(grammarAccess.getBackgroundAccess().getViewAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getViewAssignment_4()); }
	(rule__Background__ViewAssignment_4)*
	{ after(grammarAccess.getBackgroundAccess().getViewAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__0__Impl
	rule__View__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getViewAction_0()); }
	()
	{ after(grammarAccess.getViewAccess().getViewAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__1__Impl
	rule__View__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getNameAssignment_1()); }
	(rule__View__NameAssignment_1)
	{ after(grammarAccess.getViewAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getGroup_2()); }
	(rule__View__Group_2__0)?
	{ after(grammarAccess.getViewAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2__0__Impl
	rule__View__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getToKeyword_2_0()); }
	'to'
	{ after(grammarAccess.getViewAccess().getToKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__View__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewAccess().getDescAssignment_2_1()); }
	(rule__View__DescAssignment_2_1)
	{ after(grammarAccess.getViewAccess().getDescAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
	'Feature:'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
	(rule__Feature__NameAssignment_1)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getGroup_2()); }
	(rule__Feature__Group_2__0)?
	{ after(grammarAccess.getFeatureAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getSpecifiedByAssignment_3()); }
	(rule__Feature__SpecifiedByAssignment_3)
	{ after(grammarAccess.getFeatureAccess().getSpecifiedByAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getSpecifiedByAssignment_4()); }
	(rule__Feature__SpecifiedByAssignment_4)*
	{ after(grammarAccess.getFeatureAccess().getSpecifiedByAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__0__Impl
	rule__Feature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getInOrderToKeyword_2_0()); }
	'in order to'
	{ after(grammarAccess.getFeatureAccess().getInOrderToKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getDescAssignment_2_1()); }
	(rule__Feature__DescAssignment_2_1)
	{ after(grammarAccess.getFeatureAccess().getDescAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
	'Scenario:'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
	(rule__Scenario__NameAssignment_1)
	{ after(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_2()); }
	(rule__Scenario__Group_2__0)?
	{ after(grammarAccess.getScenarioAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getWhenKeyword_3()); }
	'When'
	{ after(grammarAccess.getScenarioAccess().getWhenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getTriggerAssignment_4()); }
	(rule__Scenario__TriggerAssignment_4)
	{ after(grammarAccess.getScenarioAccess().getTriggerAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
	rule__Scenario__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_5()); }
	(rule__Scenario__Group_5__0)*
	{ after(grammarAccess.getScenarioAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__6__Impl
	rule__Scenario__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getThenKeyword_6()); }
	'Then'
	{ after(grammarAccess.getScenarioAccess().getThenKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__7__Impl
	rule__Scenario__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getOutcomeAssignment_7()); }
	(rule__Scenario__OutcomeAssignment_7)
	{ after(grammarAccess.getScenarioAccess().getOutcomeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_8()); }
	(rule__Scenario__Group_8__0)*
	{ after(grammarAccess.getScenarioAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2__0__Impl
	rule__Scenario__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGivenKeyword_2_0()); }
	'Given'
	{ after(grammarAccess.getScenarioAccess().getGivenKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getSystemAssignment_2_1()); }
	(rule__Scenario__SystemAssignment_2_1)
	{ after(grammarAccess.getScenarioAccess().getSystemAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_5__0__Impl
	rule__Scenario__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getAndKeyword_5_0()); }
	'And'
	{ after(grammarAccess.getScenarioAccess().getAndKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getTriggerAssignment_5_1()); }
	(rule__Scenario__TriggerAssignment_5_1)
	{ after(grammarAccess.getScenarioAccess().getTriggerAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_8__0__Impl
	rule__Scenario__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getAndKeyword_8_0()); }
	'And'
	{ after(grammarAccess.getScenarioAccess().getAndKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getOutcomeAssignment_8_1()); }
	(rule__Scenario__OutcomeAssignment_8_1)
	{ after(grammarAccess.getScenarioAccess().getOutcomeAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
	'Given'
	{ after(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
	rule__Given__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getDashboardAssignment_1()); }
	(rule__Given__DashboardAssignment_1)
	{ after(grammarAccess.getGivenAccess().getDashboardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGroup_2()); }
	(rule__Given__Group_2__0)?
	{ after(grammarAccess.getGivenAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group_2__0__Impl
	rule__Given__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getWithAvailableDataKeyword_2_0()); }
	' with available data'
	{ after(grammarAccess.getGivenAccess().getWithAvailableDataKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group_2__1__Impl
	rule__Given__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getDataAssignment_2_1()); }
	(rule__Given__DataAssignment_2_1)
	{ after(grammarAccess.getGivenAccess().getDataAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGroup_2_2()); }
	(rule__Given__Group_2_2__0)*
	{ after(grammarAccess.getGivenAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group_2_2__0__Impl
	rule__Given__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getGivenAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getDataAssignment_2_2_1()); }
	(rule__Given__DataAssignment_2_2_1)
	{ after(grammarAccess.getGivenAccess().getDataAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getDataAction_0()); }
	()
	{ after(grammarAccess.getDataAccess().getDataAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getQuantifierAssignment_1()); }
	(rule__Data__QuantifierAssignment_1)?
	{ after(grammarAccess.getDataAccess().getQuantifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
	rule__Data__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getGroup_2()); }
	(rule__Data__Group_2__0)?
	{ after(grammarAccess.getDataAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getGroup_3()); }
	(rule__Data__Group_3__0)?
	{ after(grammarAccess.getDataAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2__0__Impl
	rule__Data__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getTypeKeyword_2_0()); }
	'type'
	{ after(grammarAccess.getDataAccess().getTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getTypeAssignment_2_1()); }
	(rule__Data__TypeAssignment_2_1)
	{ after(grammarAccess.getDataAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_3__0__Impl
	rule__Data__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLocatedInKeyword_3_0()); }
	'located in'
	{ after(grammarAccess.getDataAccess().getLocatedInKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_3__1__Impl
	rule__Data__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLocationTypeAssignment_3_1()); }
	(rule__Data__LocationTypeAssignment_3_1)
	{ after(grammarAccess.getDataAccess().getLocationTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLocationAssignment_3_2()); }
	(rule__Data__LocationAssignment_3_2)
	{ after(grammarAccess.getDataAccess().getLocationAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loading__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loading__Group__0__Impl
	rule__Loading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadingAccess().getContextAssignment_0()); }
	(rule__Loading__ContextAssignment_0)
	{ after(grammarAccess.getLoadingAccess().getContextAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loading__Group__1__Impl
	rule__Loading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadingAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getLoadingAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loading__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadingAccess().getNewAssignment_2()); }
	(rule__Loading__NewAssignment_2)
	{ after(grammarAccess.getLoadingAccess().getNewAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__0__Impl
	rule__Interaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getActionAssignment_0()); }
	(rule__Interaction__ActionAssignment_0)
	{ after(grammarAccess.getInteractionAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__1__Impl
	rule__Interaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getTargetAssignment_1()); }
	(rule__Interaction__TargetAssignment_1)?
	{ after(grammarAccess.getInteractionAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__2__Impl
	rule__Interaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getSelectedInKeyword_2()); }
	'selected in'
	{ after(grammarAccess.getInteractionAccess().getSelectedInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interaction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInteractionAccess().getContextAssignment_3()); }
	(rule__Interaction__ContextAssignment_3)
	{ after(grammarAccess.getInteractionAccess().getContextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getTargetAssignment_0()); }
	(rule__Update__TargetAssignment_0)
	{ after(grammarAccess.getUpdateAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getUpdateAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getDoAssignment_2()); }
	(rule__Update__DoAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getDoAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__0__Impl
	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getItIsPossibleToSeeKeyword_0()); }
	'it is possible to see '
	{ after(grammarAccess.getGoalAccess().getItIsPossibleToSeeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__1__Impl
	rule__Goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getFunctionAssignment_1()); }
	(rule__Goal__FunctionAssignment_1)
	{ after(grammarAccess.getGoalAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getGroup_2()); }
	(rule__Goal__Group_2__0)?
	{ after(grammarAccess.getGoalAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2__0__Impl
	rule__Goal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getOnKeyword_2_0()); }
	'on'
	{ after(grammarAccess.getGoalAccess().getOnKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2__1__Impl
	rule__Goal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getDataAssignment_2_1()); }
	(rule__Goal__DataAssignment_2_1)
	{ after(grammarAccess.getGoalAccess().getDataAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getGroup_2_2()); }
	(rule__Goal__Group_2_2__0)*
	{ after(grammarAccess.getGoalAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2_2__0__Impl
	rule__Goal__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getGoalAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Goal__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoalAccess().getDataAssignment_2_2_1()); }
	(rule__Goal__DataAssignment_2_2_1)
	{ after(grammarAccess.getGoalAccess().getDataAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getProjectAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__BackgroundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getBackgroundBackgroundParserRuleCall_3_0()); }
		ruleBackground
		{ after(grammarAccess.getProjectAccess().getBackgroundBackgroundParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__BackgroundAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getBackgroundBackgroundParserRuleCall_4_0()); }
		ruleBackground
		{ after(grammarAccess.getProjectAccess().getBackgroundBackgroundParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ConsistOfAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getConsistOfFeatureParserRuleCall_5_0()); }
		ruleFeature
		{ after(grammarAccess.getProjectAccess().getConsistOfFeatureParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ConsistOfAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getConsistOfFeatureParserRuleCall_6_0()); }
		ruleFeature
		{ after(grammarAccess.getProjectAccess().getConsistOfFeatureParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__DashboardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getDashboardEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getBackgroundAccess().getDashboardEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__ViewAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getViewViewParserRuleCall_3_0()); }
		ruleView
		{ after(grammarAccess.getBackgroundAccess().getViewViewParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__ViewAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getViewViewParserRuleCall_4_0()); }
		ruleView
		{ after(grammarAccess.getBackgroundAccess().getViewViewParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getViewAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__View__DescAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewAccess().getDescEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getViewAccess().getDescEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getFeatureAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__DescAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getDescEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getFeatureAccess().getDescEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__SpecifiedByAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getSpecifiedByScenarioParserRuleCall_3_0()); }
		ruleScenario
		{ after(grammarAccess.getFeatureAccess().getSpecifiedByScenarioParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__SpecifiedByAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getSpecifiedByScenarioParserRuleCall_4_0()); }
		ruleScenario
		{ after(grammarAccess.getFeatureAccess().getSpecifiedByScenarioParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getScenarioAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__SystemAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getSystemGivenParserRuleCall_2_1_0()); }
		ruleGiven
		{ after(grammarAccess.getScenarioAccess().getSystemGivenParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__TriggerAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getTriggerWhenParserRuleCall_4_0()); }
		ruleWhen
		{ after(grammarAccess.getScenarioAccess().getTriggerWhenParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__TriggerAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getTriggerWhenParserRuleCall_5_1_0()); }
		ruleWhen
		{ after(grammarAccess.getScenarioAccess().getTriggerWhenParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__OutcomeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getOutcomeThenParserRuleCall_7_0()); }
		ruleThen
		{ after(grammarAccess.getScenarioAccess().getOutcomeThenParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__OutcomeAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getOutcomeThenParserRuleCall_8_1_0()); }
		ruleThen
		{ after(grammarAccess.getScenarioAccess().getOutcomeThenParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__DashboardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getDashboardEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getGivenAccess().getDashboardEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__DataAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getDataDataParserRuleCall_2_1_0()); }
		ruleData
		{ after(grammarAccess.getGivenAccess().getDataDataParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__DataAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getDataDataParserRuleCall_2_2_1_0()); }
		ruleData
		{ after(grammarAccess.getGivenAccess().getDataDataParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__QuantifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
		ruleQuantifier
		{ after(grammarAccess.getDataAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getTypeDataTypeEnumRuleCall_2_1_0()); }
		ruleDataType
		{ after(grammarAccess.getDataAccess().getTypeDataTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__LocationTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getLocationTypeContainerTypeEnumRuleCall_3_1_0()); }
		ruleContainerType
		{ after(grammarAccess.getDataAccess().getLocationTypeContainerTypeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__LocationAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getLocationEStringParserRuleCall_3_2_0()); }
		ruleEString
		{ after(grammarAccess.getDataAccess().getLocationEStringParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__ContextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadingAccess().getContextViewCrossReference_0_0()); }
		(
			{ before(grammarAccess.getLoadingAccess().getContextViewEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getLoadingAccess().getContextViewEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getLoadingAccess().getContextViewCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loading__NewAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadingAccess().getNewStateEnumRuleCall_2_0()); }
		ruleState
		{ after(grammarAccess.getLoadingAccess().getNewStateEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInteractionAccess().getActionActionEnumRuleCall_0_0()); }
		ruleAction
		{ after(grammarAccess.getInteractionAccess().getActionActionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInteractionAccess().getTargetEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getInteractionAccess().getTargetEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interaction__ContextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInteractionAccess().getContextViewCrossReference_3_0()); }
		(
			{ before(grammarAccess.getInteractionAccess().getContextViewEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getInteractionAccess().getContextViewEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getInteractionAccess().getContextViewCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getTargetViewCrossReference_0_0()); }
		(
			{ before(grammarAccess.getUpdateAccess().getTargetViewEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getUpdateAccess().getTargetViewEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getUpdateAccess().getTargetViewCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__DoAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getDoReactionEnumRuleCall_2_0()); }
		ruleReaction
		{ after(grammarAccess.getUpdateAccess().getDoReactionEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getFunctionTaxonomyEnumRuleCall_1_0()); }
		ruleTaxonomy
		{ after(grammarAccess.getGoalAccess().getFunctionTaxonomyEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__DataAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getDataEStringParserRuleCall_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getGoalAccess().getDataEStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__DataAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoalAccess().getDataEStringParserRuleCall_2_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getGoalAccess().getDataEStringParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
