/*
 * generated by Xtext 2.12.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package sensorDeploymentLanguage.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package sensorDeploymentLanguage.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import sensorDeploymentLanguage.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCatalog
entryRuleCatalog
:
{ before(grammarAccess.getCatalogRule()); }
	 ruleCatalog
{ after(grammarAccess.getCatalogRule()); } 
	 EOF 
;

// Rule Catalog
ruleCatalog 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatalogAccess().getGroup()); }
		(rule__Catalog__Group__0)
		{ after(grammarAccess.getCatalogAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getGroup()); }
		(rule__Container__Group__0)
		{ after(grammarAccess.getContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainable
entryRuleContainable
:
{ before(grammarAccess.getContainableRule()); }
	 ruleContainable
{ after(grammarAccess.getContainableRule()); } 
	 EOF 
;

// Rule Containable
ruleContainable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainableAccess().getAlternatives()); }
		(rule__Containable__Alternatives)
		{ after(grammarAccess.getContainableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeriodic
entryRulePeriodic
:
{ before(grammarAccess.getPeriodicRule()); }
	 rulePeriodic
{ after(grammarAccess.getPeriodicRule()); } 
	 EOF 
;

// Rule Periodic
rulePeriodic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeriodicAccess().getGroup()); }
		(rule__Periodic__Group__0)
		{ after(grammarAccess.getPeriodicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent_Based
entryRuleEvent_Based
:
{ before(grammarAccess.getEvent_BasedRule()); }
	 ruleEvent_Based
{ after(grammarAccess.getEvent_BasedRule()); } 
	 EOF 
;

// Rule Event_Based
ruleEvent_Based 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvent_BasedAccess().getGroup()); }
		(rule__Event_Based__Group__0)
		{ after(grammarAccess.getEvent_BasedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObservation
entryRuleObservation
:
{ before(grammarAccess.getObservationRule()); }
	 ruleObservation
{ after(grammarAccess.getObservationRule()); } 
	 EOF 
;

// Rule Observation
ruleObservation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObservationAccess().getGroup()); }
		(rule__Observation__Group__0)
		{ after(grammarAccess.getObservationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup()); }
		(rule__Atomic__Group__0)
		{ after(grammarAccess.getAtomicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalculated
entryRuleCalculated
:
{ before(grammarAccess.getCalculatedRule()); }
	 ruleCalculated
{ after(grammarAccess.getCalculatedRule()); } 
	 EOF 
;

// Rule Calculated
ruleCalculated 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalculatedAccess().getGroup()); }
		(rule__Calculated__Group__0)
		{ after(grammarAccess.getCalculatedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getAlternatives()); }
		(rule__Range__Alternatives)
		{ after(grammarAccess.getRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinuous
entryRuleContinuous
:
{ before(grammarAccess.getContinuousRule()); }
	 ruleContinuous
{ after(grammarAccess.getContinuousRule()); } 
	 EOF 
;

// Rule Continuous
ruleContinuous 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinuousAccess().getGroup()); }
		(rule__Continuous__Group__0)
		{ after(grammarAccess.getContinuousAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiscrete
entryRuleDiscrete
:
{ before(grammarAccess.getDiscreteRule()); }
	 ruleDiscrete
{ after(grammarAccess.getDiscreteRule()); } 
	 EOF 
;

// Rule Discrete
ruleDiscrete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiscreteAccess().getGroup()); }
		(rule__Discrete__Group__0)
		{ after(grammarAccess.getDiscreteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteger
entryRuleInteger
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerAccess().getAlternatives()); }
		(rule__Integer__Alternatives)
		{ after(grammarAccess.getIntegerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getAlternatives()); }
		(rule__Float__Alternatives)
		{ after(grammarAccess.getFloatAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleString0
entryRuleString0
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString0Access().getGroup()); }
		(rule__String0__Group__0)
		{ after(grammarAccess.getString0Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEFloat
entryRuleEFloat
:
{ before(grammarAccess.getEFloatRule()); }
	 ruleEFloat
{ after(grammarAccess.getEFloatRule()); } 
	 EOF 
;

// Rule EFloat
ruleEFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEFloatAccess().getGroup()); }
		(rule__EFloat__Group__0)
		{ after(grammarAccess.getEFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ContainerType
ruleContainerType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerTypeAccess().getAlternatives()); }
		(rule__ContainerType__Alternatives)
		{ after(grammarAccess.getContainerTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Containable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainableAccess().getContainerParserRuleCall_0()); }
		ruleContainer
		{ after(grammarAccess.getContainableAccess().getContainerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainableAccess().getPeriodicParserRuleCall_1()); }
		rulePeriodic
		{ after(grammarAccess.getContainableAccess().getPeriodicParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContainableAccess().getEvent_BasedParserRuleCall_2()); }
		ruleEvent_Based
		{ after(grammarAccess.getContainableAccess().getEvent_BasedParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIntegerParserRuleCall_0()); }
		ruleInteger
		{ after(grammarAccess.getDataTypeAccess().getIntegerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatParserRuleCall_1()); }
		ruleFloat
		{ after(grammarAccess.getDataTypeAccess().getFloatParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getString0ParserRuleCall_2()); }
		ruleString0
		{ after(grammarAccess.getDataTypeAccess().getString0ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getAtomicParserRuleCall_0()); }
		ruleAtomic
		{ after(grammarAccess.getFieldAccess().getAtomicParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getCalculatedParserRuleCall_1()); }
		ruleCalculated
		{ after(grammarAccess.getFieldAccess().getCalculatedParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getContinuousParserRuleCall_0()); }
		ruleContinuous
		{ after(grammarAccess.getRangeAccess().getContinuousParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getDiscreteParserRuleCall_1()); }
		ruleDiscrete
		{ after(grammarAccess.getRangeAccess().getDiscreteParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerAccess().getGroup_0()); }
		(rule__Integer__Group_0__0)
		{ after(grammarAccess.getIntegerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerAccess().getInfKeyword_1()); }
		'inf'
		{ after(grammarAccess.getIntegerAccess().getInfKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getGroup_0()); }
		(rule__Float__Group_0__0)
		{ after(grammarAccess.getFloatAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatAccess().getInfKeyword_1()); }
		'inf'
		{ after(grammarAccess.getFloatAccess().getInfKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerTypeAccess().getBuildingEnumLiteralDeclaration_0()); }
		('Building')
		{ after(grammarAccess.getContainerTypeAccess().getBuildingEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getFloorEnumLiteralDeclaration_1()); }
		('Floor')
		{ after(grammarAccess.getContainerTypeAccess().getFloorEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getCorridorEnumLiteralDeclaration_2()); }
		('Corridor')
		{ after(grammarAccess.getContainerTypeAccess().getCorridorEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getRoomEnumLiteralDeclaration_3()); }
		('Room')
		{ after(grammarAccess.getContainerTypeAccess().getRoomEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getFurnitureEnumLiteralDeclaration_4()); }
		('Furniture')
		{ after(grammarAccess.getContainerTypeAccess().getFurnitureEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getWallEnumLiteralDeclaration_5()); }
		('Wall')
		{ after(grammarAccess.getContainerTypeAccess().getWallEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getContainerTypeAccess().getWindowEnumLiteralDeclaration_6()); }
		('Window')
		{ after(grammarAccess.getContainerTypeAccess().getWindowEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__0__Impl
	rule__Catalog__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getCatalogKeyword_0()); }
	'Catalog'
	{ after(grammarAccess.getCatalogAccess().getCatalogKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__1__Impl
	rule__Catalog__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getNameAssignment_1()); }
	(rule__Catalog__NameAssignment_1)
	{ after(grammarAccess.getCatalogAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__2__Impl
	rule__Catalog__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getInfrastructureKeyword_2()); }
	'Infrastructure :'
	{ after(grammarAccess.getCatalogAccess().getInfrastructureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__3__Impl
	rule__Catalog__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getRecordsAssignment_3()); }
	(rule__Catalog__RecordsAssignment_3)
	{ after(grammarAccess.getCatalogAccess().getRecordsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__4__Impl
	rule__Catalog__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getRecordsAssignment_4()); }
	(rule__Catalog__RecordsAssignment_4)*
	{ after(grammarAccess.getCatalogAccess().getRecordsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__5__Impl
	rule__Catalog__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getObservationPatternsKeyword_5()); }
	'Observation patterns :'
	{ after(grammarAccess.getCatalogAccess().getObservationPatternsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__6__Impl
	rule__Catalog__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getPatternsAssignment_6()); }
	(rule__Catalog__PatternsAssignment_6)
	{ after(grammarAccess.getCatalogAccess().getPatternsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalog__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogAccess().getPatternsAssignment_7()); }
	(rule__Catalog__PatternsAssignment_7)*
	{ after(grammarAccess.getCatalogAccess().getPatternsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getTypeAssignment_0()); }
	(rule__Container__TypeAssignment_0)
	{ after(grammarAccess.getContainerAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getNameAssignment_1()); }
	(rule__Container__NameAssignment_1)
	{ after(grammarAccess.getContainerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__2__Impl
	rule__Container__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGroup_2()); }
	(rule__Container__Group_2__0)*
	{ after(grammarAccess.getContainerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getWhiteSquareKeyword_3()); }
	'\u25A1'
	{ after(grammarAccess.getContainerAccess().getWhiteSquareKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_2__0__Impl
	rule__Container__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getBottomLeftCornerKeyword_2_0()); }
	'\u231E'
	{ after(grammarAccess.getContainerAccess().getBottomLeftCornerKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainsAssignment_2_1()); }
	(rule__Container__ContainsAssignment_2_1)
	{ after(grammarAccess.getContainerAccess().getContainsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Periodic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__0__Impl
	rule__Periodic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getPeriodicSensorKeyword_0()); }
	'Periodic sensor'
	{ after(grammarAccess.getPeriodicAccess().getPeriodicSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__1__Impl
	rule__Periodic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getNameAssignment_1()); }
	(rule__Periodic__NameAssignment_1)
	{ after(grammarAccess.getPeriodicAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__2__Impl
	rule__Periodic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getObservesKeyword_2()); }
	'observes'
	{ after(grammarAccess.getPeriodicAccess().getObservesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__3__Impl
	rule__Periodic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getObservesAssignment_3()); }
	(rule__Periodic__ObservesAssignment_3)
	{ after(grammarAccess.getPeriodicAccess().getObservesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__4__Impl
	rule__Periodic__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getEveryKeyword_4()); }
	'every'
	{ after(grammarAccess.getPeriodicAccess().getEveryKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__5__Impl
	rule__Periodic__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getPeriodAssignment_5()); }
	(rule__Periodic__PeriodAssignment_5)
	{ after(grammarAccess.getPeriodicAccess().getPeriodAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__6__Impl
	rule__Periodic__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getSecondsKeyword_6()); }
	'seconds'
	{ after(grammarAccess.getPeriodicAccess().getSecondsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getGroup_7()); }
	(rule__Periodic__Group_7__0)?
	{ after(grammarAccess.getPeriodicAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Periodic__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group_7__0__Impl
	rule__Periodic__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getIsCalculatedFromKeyword_7_0()); }
	'is calculated from'
	{ after(grammarAccess.getPeriodicAccess().getIsCalculatedFromKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Periodic__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodicAccess().getCalculatedFromAssignment_7_1()); }
	(rule__Periodic__CalculatedFromAssignment_7_1)
	{ after(grammarAccess.getPeriodicAccess().getCalculatedFromAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event_Based__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__0__Impl
	rule__Event_Based__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getEventBasedSensorKeyword_0()); }
	'Event Based sensor'
	{ after(grammarAccess.getEvent_BasedAccess().getEventBasedSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__1__Impl
	rule__Event_Based__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getNameAssignment_1()); }
	(rule__Event_Based__NameAssignment_1)
	{ after(grammarAccess.getEvent_BasedAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__2__Impl
	rule__Event_Based__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getObservesKeyword_2()); }
	'observes'
	{ after(grammarAccess.getEvent_BasedAccess().getObservesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__3__Impl
	rule__Event_Based__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getObservesAssignment_3()); }
	(rule__Event_Based__ObservesAssignment_3)
	{ after(grammarAccess.getEvent_BasedAccess().getObservesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__4__Impl
	rule__Event_Based__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getWhenKeyword_4()); }
	'when'
	{ after(grammarAccess.getEvent_BasedAccess().getWhenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__5__Impl
	rule__Event_Based__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getTriggerAssignment_5()); }
	(rule__Event_Based__TriggerAssignment_5)
	{ after(grammarAccess.getEvent_BasedAccess().getTriggerAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getGroup_6()); }
	(rule__Event_Based__Group_6__0)?
	{ after(grammarAccess.getEvent_BasedAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event_Based__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group_6__0__Impl
	rule__Event_Based__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getIsCalculatedFromKeyword_6_0()); }
	'is calculated from'
	{ after(grammarAccess.getEvent_BasedAccess().getIsCalculatedFromKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event_Based__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvent_BasedAccess().getCalculatedFromAssignment_6_1()); }
	(rule__Event_Based__CalculatedFromAssignment_6_1)
	{ after(grammarAccess.getEvent_BasedAccess().getCalculatedFromAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Observation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__0__Impl
	rule__Observation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getNameAssignment_0()); }
	(rule__Observation__NameAssignment_0)
	{ after(grammarAccess.getObservationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__1__Impl
	rule__Observation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getWithKeyword_1()); }
	'with'
	{ after(grammarAccess.getObservationAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__2__Impl
	rule__Observation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getTimeAssignment_2()); }
	(rule__Observation__TimeAssignment_2)
	{ after(grammarAccess.getObservationAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__3__Impl
	rule__Observation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getValuesAssignment_3()); }
	(rule__Observation__ValuesAssignment_3)
	{ after(grammarAccess.getObservationAccess().getValuesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getValuesAssignment_4()); }
	(rule__Observation__ValuesAssignment_4)*
	{ after(grammarAccess.getObservationAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__0__Impl
	rule__Atomic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getNameAssignment_0()); }
	(rule__Atomic__NameAssignment_0)
	{ after(grammarAccess.getAtomicAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__1__Impl
	rule__Atomic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getInRangeKeyword_1()); }
	'in range'
	{ after(grammarAccess.getAtomicAccess().getInRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRangeAssignment_2()); }
	(rule__Atomic__RangeAssignment_2)
	{ after(grammarAccess.getAtomicAccess().getRangeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__0__Impl
	rule__Calculated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getNameAssignment_0()); }
	(rule__Calculated__NameAssignment_0)
	{ after(grammarAccess.getCalculatedAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__1__Impl
	rule__Calculated__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getInRangeKeyword_1()); }
	'in range'
	{ after(grammarAccess.getCalculatedAccess().getInRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__2__Impl
	rule__Calculated__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getRangeAssignment_2()); }
	(rule__Calculated__RangeAssignment_2)
	{ after(grammarAccess.getCalculatedAccess().getRangeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__3__Impl
	rule__Calculated__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getCalculatedFromFunctionKeyword_3()); }
	'calculated from function'
	{ after(grammarAccess.getCalculatedAccess().getCalculatedFromFunctionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__4__Impl
	rule__Calculated__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getFunctionAssignment_4()); }
	(rule__Calculated__FunctionAssignment_4)
	{ after(grammarAccess.getCalculatedAccess().getFunctionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__5__Impl
	rule__Calculated__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getOnKeyword_5()); }
	'on'
	{ after(grammarAccess.getCalculatedAccess().getOnKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__6__Impl
	rule__Calculated__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getOperandsAssignment_6()); }
	(rule__Calculated__OperandsAssignment_6)
	{ after(grammarAccess.getCalculatedAccess().getOperandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getGroup_7()); }
	(rule__Calculated__Group_7__0)*
	{ after(grammarAccess.getCalculatedAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Calculated__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group_7__0__Impl
	rule__Calculated__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getCalculatedAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Calculated__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalculatedAccess().getOperandsAssignment_7_1()); }
	(rule__Calculated__OperandsAssignment_7_1)
	{ after(grammarAccess.getCalculatedAccess().getOperandsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Continuous__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__0__Impl
	rule__Continuous__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getContinuousAction_0()); }
	()
	{ after(grammarAccess.getContinuousAccess().getContinuousAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__1__Impl
	rule__Continuous__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getContinuousAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__2__Impl
	rule__Continuous__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getMinAssignment_2()); }
	(rule__Continuous__MinAssignment_2)?
	{ after(grammarAccess.getContinuousAccess().getMinAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__3__Impl
	rule__Continuous__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getFullStopFullStopFullStopKeyword_3()); }
	'...'
	{ after(grammarAccess.getContinuousAccess().getFullStopFullStopFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__4__Impl
	rule__Continuous__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getMaxAssignment_4()); }
	(rule__Continuous__MaxAssignment_4)?
	{ after(grammarAccess.getContinuousAccess().getMaxAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuous__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuousAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getContinuousAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Discrete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group__0__Impl
	rule__Discrete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getDiscreteAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group__1__Impl
	rule__Discrete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getValuesAssignment_1()); }
	(rule__Discrete__ValuesAssignment_1)
	{ after(grammarAccess.getDiscreteAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group__2__Impl
	rule__Discrete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getGroup_2()); }
	(rule__Discrete__Group_2__0)*
	{ after(grammarAccess.getDiscreteAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getDiscreteAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Discrete__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group_2__0__Impl
	rule__Discrete__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getDiscreteAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Discrete__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiscreteAccess().getValuesAssignment_2_1()); }
	(rule__Discrete__ValuesAssignment_2_1)
	{ after(grammarAccess.getDiscreteAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integer__Group_0__0__Impl
	rule__Integer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerAccess().getIntegerAction_0_0()); }
	()
	{ after(grammarAccess.getIntegerAccess().getIntegerAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Integer__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerAccess().getValueAssignment_0_1()); }
	(rule__Integer__ValueAssignment_0_1)
	{ after(grammarAccess.getIntegerAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_0__0__Impl
	rule__Float__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFloatAction_0_0()); }
	()
	{ after(grammarAccess.getFloatAccess().getFloatAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getValueAssignment_0_1()); }
	(rule__Float__ValueAssignment_0_1)
	{ after(grammarAccess.getFloatAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__0__Impl
	rule__String0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getStringAction_0()); }
	()
	{ after(grammarAccess.getString0Access().getStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__String0__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getString0Access().getValueAssignment_1()); }
	(rule__String0__ValueAssignment_1)
	{ after(grammarAccess.getString0Access().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__0__Impl
	rule__EFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__1__Impl
	rule__EFloat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__2__Impl
	rule__EFloat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__3__Impl
	rule__EFloat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getGroup_4()); }
	(rule__EFloat__Group_4__0)?
	{ after(grammarAccess.getEFloatAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__0__Impl
	rule__EFloat__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
	(rule__EFloat__Alternatives_4_0)
	{ after(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__1__Impl
	rule__EFloat__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Catalog__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getCatalogAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__RecordsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogAccess().getRecordsContainerParserRuleCall_3_0()); }
		ruleContainer
		{ after(grammarAccess.getCatalogAccess().getRecordsContainerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__RecordsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogAccess().getRecordsContainerParserRuleCall_4_0()); }
		ruleContainer
		{ after(grammarAccess.getCatalogAccess().getRecordsContainerParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__PatternsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogAccess().getPatternsObservationParserRuleCall_6_0()); }
		ruleObservation
		{ after(grammarAccess.getCatalogAccess().getPatternsObservationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalog__PatternsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogAccess().getPatternsObservationParserRuleCall_7_0()); }
		ruleObservation
		{ after(grammarAccess.getCatalogAccess().getPatternsObservationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getTypeContainerTypeEnumRuleCall_0_0()); }
		ruleContainerType
		{ after(grammarAccess.getContainerAccess().getTypeContainerTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getContainerAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ContainsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getContainsContainableParserRuleCall_2_1_0()); }
		ruleContainable
		{ after(grammarAccess.getContainerAccess().getContainsContainableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPeriodicAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__ObservesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicAccess().getObservesObservationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getPeriodicAccess().getObservesObservationEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getPeriodicAccess().getObservesObservationEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getPeriodicAccess().getObservesObservationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__PeriodAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicAccess().getPeriodEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getPeriodicAccess().getPeriodEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Periodic__CalculatedFromAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodicAccess().getCalculatedFromSensorCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getPeriodicAccess().getCalculatedFromSensorEStringParserRuleCall_7_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getPeriodicAccess().getCalculatedFromSensorEStringParserRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getPeriodicAccess().getCalculatedFromSensorCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvent_BasedAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getEvent_BasedAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__ObservesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvent_BasedAccess().getObservesObservationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getEvent_BasedAccess().getObservesObservationEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getEvent_BasedAccess().getObservesObservationEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getEvent_BasedAccess().getObservesObservationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__TriggerAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvent_BasedAccess().getTriggerEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getEvent_BasedAccess().getTriggerEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event_Based__CalculatedFromAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvent_BasedAccess().getCalculatedFromSensorCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getEvent_BasedAccess().getCalculatedFromSensorEStringParserRuleCall_6_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getEvent_BasedAccess().getCalculatedFromSensorEStringParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getEvent_BasedAccess().getCalculatedFromSensorCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getObservationAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getTimeFieldParserRuleCall_2_0()); }
		ruleField
		{ after(grammarAccess.getObservationAccess().getTimeFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__ValuesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getValuesFieldParserRuleCall_3_0()); }
		ruleField
		{ after(grammarAccess.getObservationAccess().getValuesFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getValuesFieldParserRuleCall_4_0()); }
		ruleField
		{ after(grammarAccess.getObservationAccess().getValuesFieldParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getAtomicAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__RangeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getRangeRangeParserRuleCall_2_0()); }
		ruleRange
		{ after(grammarAccess.getAtomicAccess().getRangeRangeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatedAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getCalculatedAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__RangeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatedAccess().getRangeRangeParserRuleCall_2_0()); }
		ruleRange
		{ after(grammarAccess.getCalculatedAccess().getRangeRangeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__FunctionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatedAccess().getFunctionEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getCalculatedAccess().getFunctionEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__OperandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatedAccess().getOperandsFieldCrossReference_6_0()); }
		(
			{ before(grammarAccess.getCalculatedAccess().getOperandsFieldEStringParserRuleCall_6_0_1()); }
			ruleEString
			{ after(grammarAccess.getCalculatedAccess().getOperandsFieldEStringParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getCalculatedAccess().getOperandsFieldCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Calculated__OperandsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalculatedAccess().getOperandsFieldCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getCalculatedAccess().getOperandsFieldEStringParserRuleCall_7_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getCalculatedAccess().getOperandsFieldEStringParserRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getCalculatedAccess().getOperandsFieldCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__MinAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinuousAccess().getMinDataTypeParserRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getContinuousAccess().getMinDataTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuous__MaxAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinuousAccess().getMaxDataTypeParserRuleCall_4_0()); }
		ruleDataType
		{ after(grammarAccess.getContinuousAccess().getMaxDataTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiscreteAccess().getValuesDataTypeParserRuleCall_1_0()); }
		ruleDataType
		{ after(grammarAccess.getDiscreteAccess().getValuesDataTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Discrete__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiscreteAccess().getValuesDataTypeParserRuleCall_2_1_0()); }
		ruleDataType
		{ after(grammarAccess.getDiscreteAccess().getValuesDataTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerAccess().getValueEIntParserRuleCall_0_1_0()); }
		ruleEInt
		{ after(grammarAccess.getIntegerAccess().getValueEIntParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getValueEFloatParserRuleCall_0_1_0()); }
		ruleEFloat
		{ after(grammarAccess.getFloatAccess().getValueEFloatParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString0Access().getValueEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getString0Access().getValueEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
